public class Solution {
    public int findMaximumXOR(int[] nums) {
        int max = 0, mask = 0;
        for (int i = 31; i >= 0; i--) {
            mask |= (1 << i);
            HashSet<Integer> set = new HashSet<Integer>();
            for (int num : nums) {
                set.add(num & mask); // reserve Left bits and ignore Right bits
            }
            
            /* Use 0 to keep the bit, 1 to find XOR
             * 0 ^ 0 = 0 
             * 0 ^ 1 = 1
             * 1 ^ 0 = 1
             * 1 ^ 1 = 0
             */
            int tmp = max | (1 << i); // in each iteration, there are pair(s) whoes Left bits can XOR to max
            for (int prefix : set) {
                if (set.contains(tmp ^ prefix)) {
                    max = tmp;
                }
            }
        }
        return max;
    }
}

/*

ex: nums= 100,110, tmp=100, set=(100), max=0,                           | set=(100,110), max=2
    nums= 010,011, tmp=100, set=(000), max=100, set doesn't contain !   | set=(010,010), stil not contain | max=1
    
    set contains(tmp^prefix) make sure both  1xxx and 0xxx exist

ex: nums= 10010, 01010, 11101   -> (11000)
    before i=1, max= 11000
    now    i=1, mask=11110, set=(10010,01010,11100), tmp=max|10=11010 (max possible value, can we add 10?)
           tmp^each set =       (01000,10000,00100), set contains nothing  !!
           
    set.contains((max00|0010)^(setItem))     means:
    set.contains(((m1^m2)|0010)^setItem)   means: m1(i)=0 and m2(i)=1
    set.contains(((m1^m2)|00i0)^(m3&1110)) means:
    m4=((m1^m2)|0010)^(m3&1110))           means:
    m3^m4 = ((m1^m2)|0010)^((m3&1110)^m3) = ((m1^m2)|0010)^0000 = (max)10 = newMax        !!!!!!!!!!!***********!!!!!!!!!!!!!

example: Given [14, 11, 7, 2], which in binary are [1110, 1011, 0111, 0010].
Since the MSB is 3, I'll start from i = 3 to make it simplify.

i = 3, set = {1000, 0000}, max = 1000
i = 2, set = {1100, 1000, 0100, 0000}, max = 1100
i = 1, set = {1110, 1010, 0110, 0010}, max = 1100
i = 0, set = {1110, 1011, 0111, 0010}, max = 1100
*/
